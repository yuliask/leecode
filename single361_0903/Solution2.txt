import java.util.regex.*;
class Solution {
    public int minimumOperations(String num) {
        Pattern pattern1=Pattern.compile("[27][013-689]*5[0-46-9]*$");
        Pattern pattern2=Pattern.compile("[05][1-46-9]*0[1-9]*$");
        Matcher m1=pattern1.matcher(num);
        Matcher m2=pattern2.matcher(num);
        boolean find=false;
        int a=-1,b=-1;
        if(m1.find()){
            System.out.println("in m1:"+num.length()+":"+m1.start()+":"+m1.end());
            a= num.length()-m1.start()-2;
            find=true;
        }
        if(m2.find()){
            System.out.println("in m2:"+num.length()+":"+m2.start()+":"+m2.end());
            b= num.length()-m2.start()-2;
            find=true;
        }
        if(find){
            if(b==-1)return a;
        if(a==-1||a>b)a=b;
        return a;
            
        }
        if(num.indexOf('0')>-1){
            System.out.println("in m3:");
            return num.length()-1;
        }else{
            System.out.println("in m4:");
            return num.length();            
        }
    }
}