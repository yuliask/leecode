class Solution {
    public int kk(int[][] grid,int i,int j){
        int ret=0;
        int[] vv=new int[51];
        while(i>=0&&j>=0){
            vv[grid[i][j]]=1;        
            i--;j--;
        }
        for(i=0;i<51;i++){
            if(vv[i]>0)ret++;
        }
        return ret;    
    }
    public int kkp(int[][] grid,int i,int j){
        int ret=0;
        int m=grid.length;
        int n=grid[0].length;
        int[] vv=new int[51];
        while(i<m&&j<n){
            vv[grid[i][j]]=1;        
            i++;j++;
        }
        for(i=0;i<51;i++){
            if(vv[i]>0)ret++;
        }
        return ret;    
    }
    
    public int[][] differenceOfDistinctValues(int[][] grid) {
        int m=grid.length;
        int n=grid[0].length;
        int[][] ret=new int[m][n];
        int[] vv=new int[51];
        for(int i=0;i<m;i++){
            ret[i]=new int[n];
            for(int j=0;j<n;j++){
                
                ret[i][j]=kk(grid,i-1,j-1)-kkp(grid,i+1,j+1);
                if(ret[i][j]<0)ret[i][j]*=-1;
            }
            
        }
        return ret;
        
    }
}