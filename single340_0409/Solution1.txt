class Solution {
    public boolean isPP(int n){
        if(n==1)return false;
        for(int i=2;i<=n/2;i++)if(n%i==0)return false;
        return true;
        
    }
    public int diagonalPrime(int[][] nums) {
        int max=0;
        int ll=nums.length;
        int[] aa=new int[ll*2];
        for(int i=0,j=0;i<ll;i++){
            aa[j++]=nums[i][i];
            aa[j++]=nums[i][ll-1-i];
        }
        for(int i=0;i<aa.length;i++)System.out.print(aa[i]+" ");
        Arrays.sort(aa);
        for(int i=0;i<aa.length;i++)System.out.print(aa[i]+" ");
        ArrayList<Integer> ab=new ArrayList<>();
        for(int i=ll*2-1;i>=0;i--)if(ab.contains(aa[i]))continue;else if(isPP(aa[i]))return aa[i];else ab.add(aa[i]);
        return max;
    }
}